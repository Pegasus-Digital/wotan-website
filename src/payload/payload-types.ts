/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    products: Product;
    categories: Category;
    attributes: Attribute;
    'attribute-types': AttributeType;
    budget: Budget;
    users: User;
    media: Media;
    pages: Page;
    clients: Client;
    salespersons: Salesperson;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    settings: Setting;
    company: Company;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  publishedOn?: string | null;
  sku?: string | null;
  minimumQuantity?: number | null;
  attributes?: (string | Attribute)[] | null;
  featuredImage?: string | Media | null;
  images?: string | Media | null;
  categories?: (string | Category)[] | null;
  relatedProducts?: (string | Product)[] | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface Attribute {
  id: string;
  name: string;
  value: string;
  type: string | AttributeType;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attribute-types".
 */
export interface AttributeType {
  id: string;
  name: string;
  type: 'label' | 'color';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title?: string | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "budget".
 */
export interface Budget {
  id: string;
  total: number;
  items?:
    | {
        product: string | Product;
        attributes?: (string | Attribute)[] | null;
        quantity?: number | null;
        price?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles: ('admin' | 'user')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  description?: string | null;
  publishedOn?: string | null;
  carousel?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  layout: (ProductCarousel | FeaturedSection | StatisticSection | ContentSection | ClientGrid | ContentMedia)[];
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductCarousel".
 */
export interface ProductCarousel {
  invertBackground?: boolean | null;
  title?: string | null;
  description?: string | null;
  populateBy?: ('categories' | 'selection') | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'products';
        value: string | Product;
      }[]
    | null;
  populatedDocs?:
    | {
        relationTo: 'products';
        value: string | Product;
      }[]
    | null;
  populatedDocsTotal?: number | null;
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    url?: string | null;
    label: string;
    appearance?: ('default' | 'primary' | 'secondary') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'product-carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedSection".
 */
export interface FeaturedSection {
  invertBackground?: boolean | null;
  title?: string | null;
  description?: string | null;
  cards?:
    | {
        title?: string | null;
        description?: string | null;
        image?: string | Media | null;
        linkTo?:
          | ({
              relationTo: 'categories';
              value: string | Category;
            } | null)
          | ({
              relationTo: 'products';
              value: string | Product;
            } | null);
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featured-section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatisticSection".
 */
export interface StatisticSection {
  invertBackground?: boolean | null;
  title?: string | null;
  description?: string | null;
  statistics?:
    | {
        title?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'statistic-section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentSection".
 */
export interface ContentSection {
  invertBackground?: boolean | null;
  title?: string | null;
  description?: string | null;
  columns?:
    | {
        size?: ('half' | 'full') | null;
        text: {
          [k: string]: unknown;
        }[];
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content-section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ClientGrid".
 */
export interface ClientGrid {
  invertBackground?: boolean | null;
  title?: string | null;
  description?: string | null;
  clients?:
    | {
        logo: string | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'client-grid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentMedia".
 */
export interface ContentMedia {
  title?: string | null;
  description?: string | null;
  invertBackground?: boolean | null;
  mediaPosition?: ('left' | 'right') | null;
  richText: {
    [k: string]: unknown;
  }[];
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content-media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients".
 */
export interface Client {
  id: string;
  name?: string | null;
  razaosocial?: string | null;
  type: 'company' | 'individual';
  document?: string | null;
  contacts: {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    whatsapp?: string | null;
    id?: string | null;
  }[];
  clientSince?: string | null;
  salesperson: string | Salesperson;
  roles: 'active' | 'inactive' | 'prospect';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "salespersons".
 */
export interface Salesperson {
  id: string;
  name: string;
  roles: 'internal' | 'representative';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'salespersons';
        value: string | Salesperson;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  general: {
    darkMode?: boolean | null;
  };
  header: {
    navigation: {
      logo: string | Media;
      style: 'classic' | 'dropdown' | 'megaMenu';
      links: {
        title?: string | null;
        onlyLink: boolean;
        href?: string | null;
        columns?:
          | {
              type?: ('linkCol' | 'card') | null;
              content?: {
                title?: string | null;
                description?: string | null;
              };
              linkColumn?:
                | {
                    title?: string | null;
                    href?: string | null;
                    description?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        subLinks?:
          | {
              title?: string | null;
              href?: string | null;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[];
    };
  };
  footer: {
    logo: string | Media;
    companyInfo?: {
      showAddress?: boolean | null;
      showPhone?: boolean | null;
      showEmail?: boolean | null;
      showSocial?: boolean | null;
    };
    columns?:
      | {
          title?: string | null;
          href?: string | null;
          links?:
            | {
                title?: string | null;
                href?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company".
 */
export interface Company {
  id: string;
  name?: string | null;
  founded?: string | null;
  cnpj?: string | null;
  adress?: Address;
  googleMaps?: string | null;
  contact: {
    email?: string | null;
    phone?: string | null;
    whatsapp?: string | null;
  };
  social: {
    facebook?: string | null;
    instagram?: string | null;
    linkedin?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Address".
 */
export interface Address {
  street?: string | null;
  number?: string | null;
  neighborhood?: string | null;
  city?: string | null;
  state?:
    | (
        | 'AC'
        | 'AL'
        | 'AP'
        | 'AM'
        | 'BA'
        | 'CE'
        | 'DF'
        | 'ES'
        | 'GO'
        | 'MA'
        | 'MS'
        | 'MT'
        | 'MG'
        | 'PA'
        | 'PB'
        | 'PR'
        | 'PE'
        | 'PI'
        | 'RJ'
        | 'RN'
        | 'RS'
        | 'RO'
        | 'RR'
        | 'SC'
        | 'SP'
        | 'SE'
        | 'TO'
      )
    | null;
  cep?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}